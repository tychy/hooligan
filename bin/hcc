#!/bin/bash

# set -euo pipefail

if [ $# -eq 0 ]; then
    echo "引数なしでは実行できません"
    exit 1
fi

if [ $1 = "test" ]; then
    docker-compose run hooligan ./bin/hcc testv2dr
elif [ $1 = "src" ]; then
    docker-compose run hooligan ./bin/hcc srcdr "$2"
elif [ $1 = "srcdr" ]; then
    make
    ./bin/exe.out "$2"
elif [ $1 = "exec" ]; then
    docker-compose run hooligan ./bin/hcc execdr "$2"
elif [ $1 = "execdr" ]; then
    make
    ./bin/exe.out "$2" >tmp.s
    cat ./tmp.s
    cc -static -o tmp tmp.s helper/helper.c
    ./tmp
    echo "結果: $?"
    rm tmp.s
    rm tmp
elif [ $1 = "asm" ]; then
    docker-compose run hooligan ./bin/hcc asmdr "$2"
elif [ $1 = "asmdr" ]; then
    echo "$2" >tmp.c
    cc -static -c tmp.c -o a.o
    objdump -d -M Intel a.o
    rm a.o tmp.c
elif [ $1 = "testold" ]; then
    docker-compose run hooligan make test
elif [ $1 = "testv2dr" ]; then
    make
    result=0
    for fn in test/*; do
        ./bin/exe.out $fn >tmp.s
        cc -static -o tmp tmp.s helper/helper.c
        printf $fn
        ./tmp
        if [ $? = 0 ]; then
            printf "...passed\n"
        else
            printf "...failed\n"
            result=1
        fi
    done
    rm tmp.s tmp
    exit $result
else
    echo "存在しないサブコマンドです"
    exit 1
fi
